"""
Django settings for portia_server project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.environ.get('BASE_DIR', os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
STATIC_ROOT = os.environ.get('STATIC_ROOT', os.path.realpath(os.path.join(BASE_DIR, '../portiaui/dist')))
STATIC_URL = os.environ.get('STATIC_URL', '/')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
MEDIA_ROOT = os.environ.get('MEDIA_ROOT', os.path.abspath(os.path.join(BASE_DIR, '../data/projects')))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'x8#v=v_yen3pvul&2*-x3=td2eqvw%5!*qaf^g8vzu#gcyo+%n')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DEBUG', True))

ALLOWED_HOSTS = [
    '*'
]


# Application definition

INSTALLED_APPS = [
    'db_repo.apps.DbRepoConfig',
    'storage.apps.StorageConfig',
    'portia_orm.apps.PortiaOrmConfig',
    'portia_api.apps.PortiaApiConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'portia_orm.middleware.ORMDataStoreMiddleware',
]

ROOT_URLCONF = 'portia_server.urls'

WSGI_APPLICATION = 'portia_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

SQLITE_PATH = os.environ.get('SQLITE_PATH', os.path.join(BASE_DIR, 'db.sqlite3'))
d = os.path.dirname(SQLITE_PATH)
os.makedirs(d, exist_ok=True)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': SQLITE_PATH,
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = os.environ.get('LANGUAGE_CODE', 'en-us')

TIME_ZONE = os.environ.get('TIME_ZONE', 'UTC')

USE_I18N = bool(os.environ.get('USE_I18N', True))

USE_L10N = bool(os.environ.get('USE_L10N', True))

USE_TZ = bool(os.environ.get('USE_TZ', True))

PORTIA_STORAGE_BACKEND = os.environ.get('PORTIA_STORAGE_BACKEND',
                                        'storage.backends.FsStorage')

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'portia_server.backends.LocalAuthentication',
    ),
    'EXCEPTION_HANDLER': 'portia_api.jsonapi.exceptions.jsonapi_exception_handler',
    'URL_FORMAT_OVERRIDE': None
}

CUSTOM = {}

CAPABILITIES = {
    'version_control': False,
    'create_projects': True,
    'delete_projects': True,
    'rename_projects': True,
    'deploy_projects': True,
    'rename_spiders': True,
    'rename_templates': True,
}

# domains that portia will not load
BLACKLIST_URLS = set()

# Schedule and deploy settings
PROJECT_DEPLOYER = os.environ.get(
    'PROJECT_DEPLOYER',
    'portia_api.utils.deploy.scrapyd.ScrapydDeploy')
# Function or object to generate version for deploy
DEPLOY_VERSION = None


# Scrapyd Deploy settings

# Path to default scrapyd cfg file
SCRAPYD_CFG_DEFAULT = os.environ.get('SCRAPYD_CFG_DEFAULT', None)
# Base API url for scrapyd instance
SCRAPYD_URL = os.environ.get('SCRAPYD_URL', 'http://localhost:6800/')
SCRAPYD_USERNAME = os.environ.get('SCRAPYD_USERNAME')
SCRAPYD_PASSWORD = os.environ.get('SCRAPYD_PASSWORD')


# Scrapinghub Deploy settings
SCRAPINGHUB_APIKEY = (os.environ.get('SCRAPINGHUB_APIKEY') or
                      os.environ.get('SHUB_APIKEY'))
